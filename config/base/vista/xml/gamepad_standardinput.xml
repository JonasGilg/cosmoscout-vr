<?xml version="1.0" encoding="utf-8" ?>
<module>
    <nodespace>
    </nodespace>
    <graph>
        <!-- Debug Text Node -->
        <node name="debug_text" type="SimpleText" />

        <!-- Analogs -->
        <node name="vrpn_analog_driver" type="DriverSensor">
            <param name="driver" value="XBOXCONTROLLER" />
            <param name="sensor" value="0" />
            <param name="type" value="ANALOG" />
        </node>
        <node name="vrpn_analog_data" type="HistoryProject">
            <param name="project">VALUE, CHANNELS</param>
        </node>

        <!-- Buttons -->
        <node name="vrpn_button_driver" type="DriverSensor">
            <param name="driver" value="XBOXCONTROLLER" />
            <param name="sensor" value="0" />
            <param name="type" value="BUTTON" />
        </node>
        <node name="vrpn_button_data" type="HistoryProject">
            <param name="project">BTMASK, NUMBER, STATE</param>
        </node>
        <!--    Button assignment -->
        <node name="get_button" type="Demultiplex[unsigned int]">
            <param name="num_outports">14</param>
        </node>
        <!--        converter for select inport on Demultiplexer -->
        <node name="btn_number_to_int" type="TypeConvert[unsigned int,int]" />

        <!-- A Button to button_01 event source -->
        <node name="A_to_bool" type="TypeConvert[unsigned int,bool]" />
        <node name="A_change_detect" type="ChangeDetect[bool]" />
        <node name="button_01" tag="button_01" type="EventSource" />

        <!-- B Button to button_02 event source -->
        <node name="B_to_bool" type="TypeConvert[unsigned int,bool]" />
        <node name="B_change_detect" type="ChangeDetect[bool]" />
        <node name="button_02" tag="button_02" type="EventSource" />

        <!-- LS Button to button_03 event source -->
        <node name="LS_to_bool" type="TypeConvert[unsigned int,bool]" />
        <node name="LS_change_detect" type="ChangeDetect[bool]" />
        <node name="button_03" tag="button_03" type="EventSource" />

        <!-- node to get Viewport width & height and type convert -->
        <node name="viewport" type="ViewportSource">
            <param name="value" value="MAIN_VIEWPORT" />
        </node>
        <node name="VPwidth_to_double" type="TypeConvert[int,double]" />
        <node name="VPheight_to_double" type="TypeConvert[int,double]" />

        <!-- Constant value 05 for calculating scalings -->
        <node name="const_05" type="ConstantValue[double]">
            <param name="value" value="0.5" />
        </node>

        <!-- LStick X scale [-1..1] to [0..ViewportWidth] -->
        <!--    (LSx * 05 + 05) * VPw -->
        <node name="LSx_times_05" type="Multiply[double]" />
        <node name="LSx_scale_0to1" type="Add[double]" />
        <node name="LSxVPw" type="Multiply[double]" />
        <node name="LSxVPw_to_int" type="TypeConvert[double,int]" />

        <!-- LStick Y scale [-1..1] to [0..ViewportHeight] -->
        <!--    (LSy * 05 + 05) * VPh -->
        <node name="LSy_times_05" type="Multiply[double]" />
        <node name="LSy_scale_0to1" type="Add[double]" />
        <node name="LSyVPh" type="Multiply[double]" />
        <node name="LSyVPh_to_int" type="TypeConvert[double,int]" />

        <!-- 3DMouseTransform => MatrixCompose => SetTransform -->
        <node name="3dmouse" type="3DMouseTransform">
            <param name="displaysystem" value="MAIN"/>
            <param name="viewport" value="MAIN_VIEWPORT"/>
            <param name="in_world_coordinates" value="FALSE"/>
            <param name="origin_offset_along_ray" value="0"/>
        </node>
        <node name="3dmouse_matrix" type="MatrixCompose" />
        <node name="intention_transform" type="SetTransform" >
            <param name="object" value="SELECTION_NODE" />
        </node>

    </graph>
    <edges>
        <!-- Buttons Driver => History -->
        <edge fromnode="vrpn_button_driver" fromport="history"
              tonode="vrpn_button_data" toport="history" />

        <!-- Analogs Driver => History -->
        <edge fromnode="vrpn_analog_driver" fromport="history"
              tonode="vrpn_analog_data" toport="history" />

        <!-- DeMUX Buttons -->
        <!--    convert vrpn_button_data::NUMBER to int for Demultiplex::select -->
        <edge fromnode="vrpn_button_data" fromport="NUMBER"
              tonode="btn_number_to_int" toport="in" />
        <!--    demultiplex buttons -->
        <edge fromnode="btn_number_to_int" fromport="out"
              tonode="get_button" toport="select" />
        <edge fromnode="vrpn_button_data" fromport="STATE"
              tonode="get_button" toport="value" />

        <!-- A Button to button_01 event source -->
        <edge fromnode="get_button" fromport="0"
              tonode="A_to_bool" toport="in" />
        <edge fromnode="A_to_bool" fromport="out"
              tonode="A_change_detect" toport="in" />
        <edge fromnode="A_change_detect" fromport="out"
              tonode="button_01" toport="value" />

        <!-- B Button to button_02 event source -->
        <edge fromnode="get_button" fromport="1"
              tonode="B_to_bool" toport="in" />
        <edge fromnode="B_to_bool" fromport="out"
              tonode="B_change_detect" toport="in" />
        <edge fromnode="B_change_detect" fromport="out"
              tonode="button_02" toport="value" />

        <!-- LS Button to button_03 event source -->
        <edge fromnode="get_button" fromport="8"
              tonode="LS_to_bool" toport="in" />
        <edge fromnode="LS_to_bool" fromport="out"
              tonode="LS_change_detect" toport="in" />
        <edge fromnode="LS_change_detect" fromport="out"
              tonode="button_03" toport="value" />

        <!-- node to get Viewport width & height and type convert -->
        <edge fromnode="viewport" fromport="vp_w"
              tonode="VPwidth_to_double" toport="in" />
        <edge fromnode="viewport" fromport="vp_h"
              tonode="VPheight_to_double" toport="in" />

        <!-- LStick X scale [-1..1] to [0..ViewportWidth] -->
        <!--     LSx * 05              -->
        <edge fromnode="vrpn_analog_data" fromport="VALUE_0"
              tonode="LSx_times_05" toport="first" />
        <edge fromnode="const_05" fromport="value"
              tonode="LSx_times_05" toport="second" />
        <!--    (LSx * 05 + 05)       -->
        <edge fromnode="LSx_times_05" fromport="out"
              tonode="LSx_scale_0to1" toport="first" />
        <edge fromnode="const_05" fromport="value"
              tonode="LSx_scale_0to1" toport="second" />
        <!--    (LSx * 05 + 05) * VPw -->
        <edge fromnode="LSx_scale_0to1" fromport="out"
              tonode="LSxVPw" toport="first" />
        <edge fromnode="VPwidth_to_double" fromport="out"
              tonode="LSxVPw" toport="second" />

        <!-- LStick Y scale [-1..1] to [0..ViewportHeight] -->
        <!--     LSy * 05              -->
        <edge fromnode="vrpn_analog_data" fromport="VALUE_1"
              tonode="LSy_times_05" toport="first" />
        <edge fromnode="const_05" fromport="value"
              tonode="LSy_times_05" toport="second" />
        <!--    (LSy * 05 + 05)       -->
        <edge fromnode="LSy_times_05" fromport="out"
              tonode="LSy_scale_0to1" toport="first" />
        <edge fromnode="const_05" fromport="value"
              tonode="LSy_scale_0to1" toport="second" />
        <!--    (LSy * 05 + 05) * VPh -->
        <edge fromnode="LSy_scale_0to1" fromport="out"
              tonode="LSyVPh" toport="first" />
        <edge fromnode="VPheight_to_double" fromport="out"
              tonode="LSyVPh" toport="second" />

        <!-- x/y to int => 3DMouseTransform -->
        <edge fromnode="LSxVPw" fromport="out"
              tonode="LSxVPw_to_int" toport="in" />
        <edge fromnode="LSyVPh" fromport="out"
              tonode="LSyVPh_to_int" toport="in" />

        <edge fromnode="LSxVPw_to_int" fromport="out"
              tonode="3dmouse" toport="x_pos" />
        <edge fromnode="LSyVPh_to_int" fromport="out"
              tonode="3dmouse" toport="y_pos" />
        <!--              3DMouseTransform => MatrixCompose -->
        <edge fromnode="3dmouse" fromport="orientation"
              tonode="3dmouse_matrix" toport="orientation" />
        <edge  fromnode="3dmouse" fromport="position"
               tonode="3dmouse_matrix" toport="translation" />
        <!--                                  MatrixCompose => SetTransform -->
        <edge fromnode="3dmouse_matrix" fromport="out"
              tonode="intention_transform" toport="in" />

        <!-- TODO: fix: EITHER gamepad or mouse standardinput -->

        <!-- Debugging -->
        <!--    Analog Data -->
        <!--        0 = Left Stick X --
        <edge fromnode="vrpn_analog_data" fromport="VALUE_0"
              tonode="debug_text" toport="LStickX" />
        <!--        1 = Left Stick Y --
        <edge fromnode="vrpn_analog_data" fromport="VALUE_1"
              tonode="debug_text" toport="LStickY" />
        <!--        2 = Right Stick X --
        <edge fromnode="vrpn_analog_data" fromport="VALUE_2"
              tonode="debug_text" toport="RStickX" />
        <!--        3 = Right Stick Y --
        <edge fromnode="vrpn_analog_data" fromport="VALUE_3"
              tonode="debug_text" toport="RStickY" />
        <!--        4 = Triggers (Left positive, Right negative) -->
        <edge fromnode="vrpn_analog_data" fromport="VALUE_4"
              tonode="debug_text" toport="Triggers(LT>0>RT)" />
        <!--        5 = D-Pad (-1 = nothing, 0 = up, 45 = up-right, 90 = right, etc...) --
        <edge fromnode="vrpn_analog_data" fromport="VALUE_5"
              tonode="debug_text" toport="Dpad(-1=nothing, 0Â°=up)" />

        <!--    Button Data -->
        <!--        0 = A --
        <edge fromnode="get_button" fromport="0"
              tonode="debug_text" toport="BtnA" />
        <!--        1 = B --
        <edge fromnode="get_button" fromport="1"
              tonode="debug_text" toport="BtnB" />
        <!--        2 = X --
        <edge fromnode="get_button" fromport="2"
              tonode="debug_text" toport="BtnX" />
        <!--        3 = Y --
        <edge fromnode="get_button" fromport="3"
              tonode="debug_text" toport="BtnY" />
        <!--        4 = LB (Left Bumper) --
        <edge fromnode="get_button" fromport="4"
              tonode="debug_text" toport="BtnLB" />
        <!--        5 = RB (Right Bumper) --
        <edge fromnode="get_button" fromport="5"
              tonode="debug_text" toport="BtnRB" />
        <!--        6 = Back --
        <edge fromnode="get_button" fromport="6"
              tonode="debug_text" toport="BtnBack" />
        <!--        7 = Start --
        <edge fromnode="get_button" fromport="7"
              tonode="debug_text" toport="BtnStart" />
        <!--        8 = LS (Left Stick) --
        <edge fromnode="get_button" fromport="8"
              tonode="debug_text" toport="BtnLS" />
        <!--        9 = RS (Right Stick) --
        <edge fromnode="get_button" fromport="9"
              tonode="debug_text" toport="BtnRS" />
        <!--       10 = Up (D-Pad Up) --
        <edge fromnode="get_button" fromport="10"
              tonode="debug_text" toport="BtnUP" />
        <!--       11 = Right (D-Pad Right) --
        <edge fromnode="get_button" fromport="11"
              tonode="debug_text" toport="BtnRight" />
        <!--       12 = Down (D-Pad Down) --
        <edge fromnode="get_button" fromport="12"
              tonode="debug_text" toport="BtnDown" />
        <!--       13 = Left (D-Pad Left) --
        <edge fromnode="get_button" fromport="13"
              tonode="debug_text" toport="BtnLeft" />
        <!---->
    </edges>
</module>
